# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Redland', [dirname(__file__)])
        except ImportError:
            import _Redland
            return _Redland
        if fp is not None:
            try:
                _mod = imp.load_module('_Redland', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _Redland = swig_import_helper()
    del swig_import_helper
else:
    import _Redland
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def librdf_new_digest(*args):
  return _Redland.librdf_new_digest(*args)
librdf_new_digest = _Redland.librdf_new_digest

def librdf_free_digest(*args):
  return _Redland.librdf_free_digest(*args)
librdf_free_digest = _Redland.librdf_free_digest

def librdf_digest_init(*args):
  return _Redland.librdf_digest_init(*args)
librdf_digest_init = _Redland.librdf_digest_init

def librdf_digest_update(*args):
  return _Redland.librdf_digest_update(*args)
librdf_digest_update = _Redland.librdf_digest_update

def librdf_digest_update_string(*args):
  return _Redland.librdf_digest_update_string(*args)
librdf_digest_update_string = _Redland.librdf_digest_update_string

def librdf_digest_final(*args):
  return _Redland.librdf_digest_final(*args)
librdf_digest_final = _Redland.librdf_digest_final

def librdf_digest_to_string(*args):
  return _Redland.librdf_digest_to_string(*args)
librdf_digest_to_string = _Redland.librdf_digest_to_string

def librdf_new_hash(*args):
  return _Redland.librdf_new_hash(*args)
librdf_new_hash = _Redland.librdf_new_hash

def librdf_new_hash_from_string(*args):
  return _Redland.librdf_new_hash_from_string(*args)
librdf_new_hash_from_string = _Redland.librdf_new_hash_from_string

def librdf_new_hash_from_array_of_strings(*args):
  return _Redland.librdf_new_hash_from_array_of_strings(*args)
librdf_new_hash_from_array_of_strings = _Redland.librdf_new_hash_from_array_of_strings

def librdf_hash_to_string(*args):
  return _Redland.librdf_hash_to_string(*args)
librdf_hash_to_string = _Redland.librdf_hash_to_string

def librdf_free_hash(*args):
  return _Redland.librdf_free_hash(*args)
librdf_free_hash = _Redland.librdf_free_hash

def librdf_new_world():
  return _Redland.librdf_new_world()
librdf_new_world = _Redland.librdf_new_world

def librdf_free_world(*args):
  return _Redland.librdf_free_world(*args)
librdf_free_world = _Redland.librdf_free_world

def librdf_world_open(*args):
  return _Redland.librdf_world_open(*args)
librdf_world_open = _Redland.librdf_world_open

def librdf_world_get_feature(*args):
  return _Redland.librdf_world_get_feature(*args)
librdf_world_get_feature = _Redland.librdf_world_get_feature

def librdf_world_set_feature(*args):
  return _Redland.librdf_world_set_feature(*args)
librdf_world_set_feature = _Redland.librdf_world_set_feature

def librdf_parser_get_accept_header(*args):
  return _Redland.librdf_parser_get_accept_header(*args)
librdf_parser_get_accept_header = _Redland.librdf_parser_get_accept_header

def librdf_world_set_logger(*args):
  return _Redland.librdf_world_set_logger(*args)
librdf_world_set_logger = _Redland.librdf_world_set_logger

def librdf_free_iterator(*args):
  return _Redland.librdf_free_iterator(*args)
librdf_free_iterator = _Redland.librdf_free_iterator

def librdf_iterator_end(*args):
  return _Redland.librdf_iterator_end(*args)
librdf_iterator_end = _Redland.librdf_iterator_end

def librdf_iterator_get_object(*args):
  return _Redland.librdf_iterator_get_object(*args)
librdf_iterator_get_object = _Redland.librdf_iterator_get_object

def librdf_iterator_get_context(*args):
  return _Redland.librdf_iterator_get_context(*args)
librdf_iterator_get_context = _Redland.librdf_iterator_get_context

def librdf_iterator_next(*args):
  return _Redland.librdf_iterator_next(*args)
librdf_iterator_next = _Redland.librdf_iterator_next

def librdf_new_uri(*args):
  return _Redland.librdf_new_uri(*args)
librdf_new_uri = _Redland.librdf_new_uri

def librdf_new_uri_from_uri(*args):
  return _Redland.librdf_new_uri_from_uri(*args)
librdf_new_uri_from_uri = _Redland.librdf_new_uri_from_uri

def librdf_new_uri_from_filename(*args):
  return _Redland.librdf_new_uri_from_filename(*args)
librdf_new_uri_from_filename = _Redland.librdf_new_uri_from_filename

def librdf_free_uri(*args):
  return _Redland.librdf_free_uri(*args)
librdf_free_uri = _Redland.librdf_free_uri

def librdf_uri_to_string(*args):
  return _Redland.librdf_uri_to_string(*args)
librdf_uri_to_string = _Redland.librdf_uri_to_string

def librdf_uri_equals(*args):
  return _Redland.librdf_uri_equals(*args)
librdf_uri_equals = _Redland.librdf_uri_equals

def librdf_uri_compare(*args):
  return _Redland.librdf_uri_compare(*args)
librdf_uri_compare = _Redland.librdf_uri_compare

def librdf_new_node(*args):
  return _Redland.librdf_new_node(*args)
librdf_new_node = _Redland.librdf_new_node

def librdf_new_node_from_uri_string(*args):
  return _Redland.librdf_new_node_from_uri_string(*args)
librdf_new_node_from_uri_string = _Redland.librdf_new_node_from_uri_string

def librdf_new_node_from_uri(*args):
  return _Redland.librdf_new_node_from_uri(*args)
librdf_new_node_from_uri = _Redland.librdf_new_node_from_uri

def librdf_new_node_from_uri_local_name(*args):
  return _Redland.librdf_new_node_from_uri_local_name(*args)
librdf_new_node_from_uri_local_name = _Redland.librdf_new_node_from_uri_local_name

def librdf_new_node_from_normalised_uri_string(*args):
  return _Redland.librdf_new_node_from_normalised_uri_string(*args)
librdf_new_node_from_normalised_uri_string = _Redland.librdf_new_node_from_normalised_uri_string

def librdf_new_node_from_literal(*args):
  return _Redland.librdf_new_node_from_literal(*args)
librdf_new_node_from_literal = _Redland.librdf_new_node_from_literal

def librdf_new_node_from_typed_literal(*args):
  return _Redland.librdf_new_node_from_typed_literal(*args)
librdf_new_node_from_typed_literal = _Redland.librdf_new_node_from_typed_literal

def librdf_new_node_from_node(*args):
  return _Redland.librdf_new_node_from_node(*args)
librdf_new_node_from_node = _Redland.librdf_new_node_from_node

def librdf_new_node_from_blank_identifier(*args):
  return _Redland.librdf_new_node_from_blank_identifier(*args)
librdf_new_node_from_blank_identifier = _Redland.librdf_new_node_from_blank_identifier

def librdf_free_node(*args):
  return _Redland.librdf_free_node(*args)
librdf_free_node = _Redland.librdf_free_node

def librdf_node_get_uri(*args):
  return _Redland.librdf_node_get_uri(*args)
librdf_node_get_uri = _Redland.librdf_node_get_uri

def librdf_node_get_type(*args):
  return _Redland.librdf_node_get_type(*args)
librdf_node_get_type = _Redland.librdf_node_get_type

def librdf_node_get_literal_value(*args):
  return _Redland.librdf_node_get_literal_value(*args)
librdf_node_get_literal_value = _Redland.librdf_node_get_literal_value

def librdf_node_get_literal_value_as_latin1(*args):
  return _Redland.librdf_node_get_literal_value_as_latin1(*args)
librdf_node_get_literal_value_as_latin1 = _Redland.librdf_node_get_literal_value_as_latin1

def librdf_node_get_literal_value_language(*args):
  return _Redland.librdf_node_get_literal_value_language(*args)
librdf_node_get_literal_value_language = _Redland.librdf_node_get_literal_value_language

def librdf_node_get_literal_value_datatype_uri(*args):
  return _Redland.librdf_node_get_literal_value_datatype_uri(*args)
librdf_node_get_literal_value_datatype_uri = _Redland.librdf_node_get_literal_value_datatype_uri

def librdf_node_get_literal_value_is_wf_xml(*args):
  return _Redland.librdf_node_get_literal_value_is_wf_xml(*args)
librdf_node_get_literal_value_is_wf_xml = _Redland.librdf_node_get_literal_value_is_wf_xml

def librdf_node_get_li_ordinal(*args):
  return _Redland.librdf_node_get_li_ordinal(*args)
librdf_node_get_li_ordinal = _Redland.librdf_node_get_li_ordinal

def librdf_node_to_string(*args):
  return _Redland.librdf_node_to_string(*args)
librdf_node_to_string = _Redland.librdf_node_to_string

def librdf_node_get_blank_identifier(*args):
  return _Redland.librdf_node_get_blank_identifier(*args)
librdf_node_get_blank_identifier = _Redland.librdf_node_get_blank_identifier

def librdf_node_is_resource(*args):
  return _Redland.librdf_node_is_resource(*args)
librdf_node_is_resource = _Redland.librdf_node_is_resource

def librdf_node_is_literal(*args):
  return _Redland.librdf_node_is_literal(*args)
librdf_node_is_literal = _Redland.librdf_node_is_literal

def librdf_node_is_blank(*args):
  return _Redland.librdf_node_is_blank(*args)
librdf_node_is_blank = _Redland.librdf_node_is_blank

def librdf_node_equals(*args):
  return _Redland.librdf_node_equals(*args)
librdf_node_equals = _Redland.librdf_node_equals

def librdf_new_statement(*args):
  return _Redland.librdf_new_statement(*args)
librdf_new_statement = _Redland.librdf_new_statement

def librdf_new_statement_from_statement(*args):
  return _Redland.librdf_new_statement_from_statement(*args)
librdf_new_statement_from_statement = _Redland.librdf_new_statement_from_statement

def librdf_new_statement_from_nodes(*args):
  return _Redland.librdf_new_statement_from_nodes(*args)
librdf_new_statement_from_nodes = _Redland.librdf_new_statement_from_nodes

def librdf_free_statement(*args):
  return _Redland.librdf_free_statement(*args)
librdf_free_statement = _Redland.librdf_free_statement

def librdf_statement_get_subject(*args):
  return _Redland.librdf_statement_get_subject(*args)
librdf_statement_get_subject = _Redland.librdf_statement_get_subject

def librdf_statement_set_subject(*args):
  return _Redland.librdf_statement_set_subject(*args)
librdf_statement_set_subject = _Redland.librdf_statement_set_subject

def librdf_statement_get_predicate(*args):
  return _Redland.librdf_statement_get_predicate(*args)
librdf_statement_get_predicate = _Redland.librdf_statement_get_predicate

def librdf_statement_set_predicate(*args):
  return _Redland.librdf_statement_set_predicate(*args)
librdf_statement_set_predicate = _Redland.librdf_statement_set_predicate

def librdf_statement_get_object(*args):
  return _Redland.librdf_statement_get_object(*args)
librdf_statement_get_object = _Redland.librdf_statement_get_object

def librdf_statement_set_object(*args):
  return _Redland.librdf_statement_set_object(*args)
librdf_statement_set_object = _Redland.librdf_statement_set_object

def librdf_statement_equals(*args):
  return _Redland.librdf_statement_equals(*args)
librdf_statement_equals = _Redland.librdf_statement_equals

def librdf_statement_match(*args):
  return _Redland.librdf_statement_match(*args)
librdf_statement_match = _Redland.librdf_statement_match

def librdf_statement_to_string(*args):
  return _Redland.librdf_statement_to_string(*args)
librdf_statement_to_string = _Redland.librdf_statement_to_string

def librdf_statement_is_complete(*args):
  return _Redland.librdf_statement_is_complete(*args)
librdf_statement_is_complete = _Redland.librdf_statement_is_complete

def librdf_new_model(*args):
  return _Redland.librdf_new_model(*args)
librdf_new_model = _Redland.librdf_new_model

def librdf_new_model_with_options(*args):
  return _Redland.librdf_new_model_with_options(*args)
librdf_new_model_with_options = _Redland.librdf_new_model_with_options

def librdf_new_model_from_model(*args):
  return _Redland.librdf_new_model_from_model(*args)
librdf_new_model_from_model = _Redland.librdf_new_model_from_model

def librdf_free_model(*args):
  return _Redland.librdf_free_model(*args)
librdf_free_model = _Redland.librdf_free_model

def librdf_model_size(*args):
  return _Redland.librdf_model_size(*args)
librdf_model_size = _Redland.librdf_model_size

def librdf_model_add(*args):
  return _Redland.librdf_model_add(*args)
librdf_model_add = _Redland.librdf_model_add

def librdf_model_add_string_literal_statement(*args):
  return _Redland.librdf_model_add_string_literal_statement(*args)
librdf_model_add_string_literal_statement = _Redland.librdf_model_add_string_literal_statement

def librdf_model_add_typed_literal_statement(*args):
  return _Redland.librdf_model_add_typed_literal_statement(*args)
librdf_model_add_typed_literal_statement = _Redland.librdf_model_add_typed_literal_statement

def librdf_model_add_statement(*args):
  return _Redland.librdf_model_add_statement(*args)
librdf_model_add_statement = _Redland.librdf_model_add_statement

def librdf_model_add_statements(*args):
  return _Redland.librdf_model_add_statements(*args)
librdf_model_add_statements = _Redland.librdf_model_add_statements

def librdf_model_remove_statement(*args):
  return _Redland.librdf_model_remove_statement(*args)
librdf_model_remove_statement = _Redland.librdf_model_remove_statement

def librdf_model_contains_statement(*args):
  return _Redland.librdf_model_contains_statement(*args)
librdf_model_contains_statement = _Redland.librdf_model_contains_statement

def librdf_model_as_stream(*args):
  return _Redland.librdf_model_as_stream(*args)
librdf_model_as_stream = _Redland.librdf_model_as_stream

def librdf_model_find_statements(*args):
  return _Redland.librdf_model_find_statements(*args)
librdf_model_find_statements = _Redland.librdf_model_find_statements

def librdf_model_find_statements_in_context(*args):
  return _Redland.librdf_model_find_statements_in_context(*args)
librdf_model_find_statements_in_context = _Redland.librdf_model_find_statements_in_context

def librdf_model_get_sources(*args):
  return _Redland.librdf_model_get_sources(*args)
librdf_model_get_sources = _Redland.librdf_model_get_sources

def librdf_model_get_arcs(*args):
  return _Redland.librdf_model_get_arcs(*args)
librdf_model_get_arcs = _Redland.librdf_model_get_arcs

def librdf_model_get_targets(*args):
  return _Redland.librdf_model_get_targets(*args)
librdf_model_get_targets = _Redland.librdf_model_get_targets

def librdf_model_get_source(*args):
  return _Redland.librdf_model_get_source(*args)
librdf_model_get_source = _Redland.librdf_model_get_source

def librdf_model_get_arc(*args):
  return _Redland.librdf_model_get_arc(*args)
librdf_model_get_arc = _Redland.librdf_model_get_arc

def librdf_model_get_arcs_out(*args):
  return _Redland.librdf_model_get_arcs_out(*args)
librdf_model_get_arcs_out = _Redland.librdf_model_get_arcs_out

def librdf_model_get_arcs_in(*args):
  return _Redland.librdf_model_get_arcs_in(*args)
librdf_model_get_arcs_in = _Redland.librdf_model_get_arcs_in

def librdf_model_has_arc_in(*args):
  return _Redland.librdf_model_has_arc_in(*args)
librdf_model_has_arc_in = _Redland.librdf_model_has_arc_in

def librdf_model_has_arc_out(*args):
  return _Redland.librdf_model_has_arc_out(*args)
librdf_model_has_arc_out = _Redland.librdf_model_has_arc_out

def librdf_model_get_target(*args):
  return _Redland.librdf_model_get_target(*args)
librdf_model_get_target = _Redland.librdf_model_get_target

def librdf_model_context_add_statement(*args):
  return _Redland.librdf_model_context_add_statement(*args)
librdf_model_context_add_statement = _Redland.librdf_model_context_add_statement

def librdf_model_context_add_statements(*args):
  return _Redland.librdf_model_context_add_statements(*args)
librdf_model_context_add_statements = _Redland.librdf_model_context_add_statements

def librdf_model_context_remove_statement(*args):
  return _Redland.librdf_model_context_remove_statement(*args)
librdf_model_context_remove_statement = _Redland.librdf_model_context_remove_statement

def librdf_model_context_remove_statements(*args):
  return _Redland.librdf_model_context_remove_statements(*args)
librdf_model_context_remove_statements = _Redland.librdf_model_context_remove_statements

def librdf_model_context_as_stream(*args):
  return _Redland.librdf_model_context_as_stream(*args)
librdf_model_context_as_stream = _Redland.librdf_model_context_as_stream

def librdf_model_sync(*args):
  return _Redland.librdf_model_sync(*args)
librdf_model_sync = _Redland.librdf_model_sync

def librdf_model_get_contexts(*args):
  return _Redland.librdf_model_get_contexts(*args)
librdf_model_get_contexts = _Redland.librdf_model_get_contexts

def librdf_model_contains_context(*args):
  return _Redland.librdf_model_contains_context(*args)
librdf_model_contains_context = _Redland.librdf_model_contains_context

def librdf_model_get_feature(*args):
  return _Redland.librdf_model_get_feature(*args)
librdf_model_get_feature = _Redland.librdf_model_get_feature

def librdf_model_set_feature(*args):
  return _Redland.librdf_model_set_feature(*args)
librdf_model_set_feature = _Redland.librdf_model_set_feature

def librdf_model_load(*args):
  return _Redland.librdf_model_load(*args)
librdf_model_load = _Redland.librdf_model_load

def librdf_model_query_execute(*args):
  return _Redland.librdf_model_query_execute(*args)
librdf_model_query_execute = _Redland.librdf_model_query_execute

def librdf_model_to_string(*args):
  return _Redland.librdf_model_to_string(*args)
librdf_model_to_string = _Redland.librdf_model_to_string

def librdf_model_transaction_start(*args):
  return _Redland.librdf_model_transaction_start(*args)
librdf_model_transaction_start = _Redland.librdf_model_transaction_start

def librdf_model_transaction_commit(*args):
  return _Redland.librdf_model_transaction_commit(*args)
librdf_model_transaction_commit = _Redland.librdf_model_transaction_commit

def librdf_model_transaction_rollback(*args):
  return _Redland.librdf_model_transaction_rollback(*args)
librdf_model_transaction_rollback = _Redland.librdf_model_transaction_rollback

def librdf_new_storage(*args):
  return _Redland.librdf_new_storage(*args)
librdf_new_storage = _Redland.librdf_new_storage

def librdf_new_storage_from_storage(*args):
  return _Redland.librdf_new_storage_from_storage(*args)
librdf_new_storage_from_storage = _Redland.librdf_new_storage_from_storage

def librdf_free_storage(*args):
  return _Redland.librdf_free_storage(*args)
librdf_free_storage = _Redland.librdf_free_storage

def librdf_parser_check_name(*args):
  return _Redland.librdf_parser_check_name(*args)
librdf_parser_check_name = _Redland.librdf_parser_check_name

def librdf_new_parser(*args):
  return _Redland.librdf_new_parser(*args)
librdf_new_parser = _Redland.librdf_new_parser

def librdf_free_parser(*args):
  return _Redland.librdf_free_parser(*args)
librdf_free_parser = _Redland.librdf_free_parser

def librdf_parser_parse_as_stream(*args):
  return _Redland.librdf_parser_parse_as_stream(*args)
librdf_parser_parse_as_stream = _Redland.librdf_parser_parse_as_stream

def librdf_parser_parse_into_model(*args):
  return _Redland.librdf_parser_parse_into_model(*args)
librdf_parser_parse_into_model = _Redland.librdf_parser_parse_into_model

def librdf_parser_parse_string_as_stream(*args):
  return _Redland.librdf_parser_parse_string_as_stream(*args)
librdf_parser_parse_string_as_stream = _Redland.librdf_parser_parse_string_as_stream

def librdf_parser_parse_string_into_model(*args):
  return _Redland.librdf_parser_parse_string_into_model(*args)
librdf_parser_parse_string_into_model = _Redland.librdf_parser_parse_string_into_model

def librdf_parser_parse_counted_string_as_stream(*args):
  return _Redland.librdf_parser_parse_counted_string_as_stream(*args)
librdf_parser_parse_counted_string_as_stream = _Redland.librdf_parser_parse_counted_string_as_stream

def librdf_parser_parse_counted_string_into_model(*args):
  return _Redland.librdf_parser_parse_counted_string_into_model(*args)
librdf_parser_parse_counted_string_into_model = _Redland.librdf_parser_parse_counted_string_into_model

def librdf_parser_get_feature(*args):
  return _Redland.librdf_parser_get_feature(*args)
librdf_parser_get_feature = _Redland.librdf_parser_get_feature

def librdf_parser_set_feature(*args):
  return _Redland.librdf_parser_set_feature(*args)
librdf_parser_set_feature = _Redland.librdf_parser_set_feature

def librdf_parser_guess_name(*args):
  return _Redland.librdf_parser_guess_name(*args)
librdf_parser_guess_name = _Redland.librdf_parser_guess_name

def librdf_parser_guess_name2(*args):
  return _Redland.librdf_parser_guess_name2(*args)
librdf_parser_guess_name2 = _Redland.librdf_parser_guess_name2

def librdf_parser_get_namespaces_seen_prefix(*args):
  return _Redland.librdf_parser_get_namespaces_seen_prefix(*args)
librdf_parser_get_namespaces_seen_prefix = _Redland.librdf_parser_get_namespaces_seen_prefix

def librdf_parser_get_namespaces_seen_uri(*args):
  return _Redland.librdf_parser_get_namespaces_seen_uri(*args)
librdf_parser_get_namespaces_seen_uri = _Redland.librdf_parser_get_namespaces_seen_uri

def librdf_parser_get_namespaces_seen_count(*args):
  return _Redland.librdf_parser_get_namespaces_seen_count(*args)
librdf_parser_get_namespaces_seen_count = _Redland.librdf_parser_get_namespaces_seen_count

def librdf_new_query(*args):
  return _Redland.librdf_new_query(*args)
librdf_new_query = _Redland.librdf_new_query

def librdf_new_query_from_query(*args):
  return _Redland.librdf_new_query_from_query(*args)
librdf_new_query_from_query = _Redland.librdf_new_query_from_query

def librdf_free_query(*args):
  return _Redland.librdf_free_query(*args)
librdf_free_query = _Redland.librdf_free_query

def librdf_query_execute(*args):
  return _Redland.librdf_query_execute(*args)
librdf_query_execute = _Redland.librdf_query_execute

def librdf_query_get_limit(*args):
  return _Redland.librdf_query_get_limit(*args)
librdf_query_get_limit = _Redland.librdf_query_get_limit

def librdf_query_set_limit(*args):
  return _Redland.librdf_query_set_limit(*args)
librdf_query_set_limit = _Redland.librdf_query_set_limit

def librdf_query_get_offset(*args):
  return _Redland.librdf_query_get_offset(*args)
librdf_query_get_offset = _Redland.librdf_query_get_offset

def librdf_query_set_offset(*args):
  return _Redland.librdf_query_set_offset(*args)
librdf_query_set_offset = _Redland.librdf_query_set_offset

def librdf_query_results_as_stream(*args):
  return _Redland.librdf_query_results_as_stream(*args)
librdf_query_results_as_stream = _Redland.librdf_query_results_as_stream

def librdf_query_results_get_count(*args):
  return _Redland.librdf_query_results_get_count(*args)
librdf_query_results_get_count = _Redland.librdf_query_results_get_count

def librdf_query_results_next(*args):
  return _Redland.librdf_query_results_next(*args)
librdf_query_results_next = _Redland.librdf_query_results_next

def librdf_query_results_finished(*args):
  return _Redland.librdf_query_results_finished(*args)
librdf_query_results_finished = _Redland.librdf_query_results_finished

def librdf_query_results_get_binding_value(*args):
  return _Redland.librdf_query_results_get_binding_value(*args)
librdf_query_results_get_binding_value = _Redland.librdf_query_results_get_binding_value

def librdf_query_results_get_binding_name(*args):
  return _Redland.librdf_query_results_get_binding_name(*args)
librdf_query_results_get_binding_name = _Redland.librdf_query_results_get_binding_name

def librdf_query_results_get_binding_value_by_name(*args):
  return _Redland.librdf_query_results_get_binding_value_by_name(*args)
librdf_query_results_get_binding_value_by_name = _Redland.librdf_query_results_get_binding_value_by_name

def librdf_query_results_get_bindings_count(*args):
  return _Redland.librdf_query_results_get_bindings_count(*args)
librdf_query_results_get_bindings_count = _Redland.librdf_query_results_get_bindings_count

def librdf_query_results_to_file(*args):
  return _Redland.librdf_query_results_to_file(*args)
librdf_query_results_to_file = _Redland.librdf_query_results_to_file

def librdf_query_results_to_file2(*args):
  return _Redland.librdf_query_results_to_file2(*args)
librdf_query_results_to_file2 = _Redland.librdf_query_results_to_file2

def librdf_query_results_to_string(*args):
  return _Redland.librdf_query_results_to_string(*args)
librdf_query_results_to_string = _Redland.librdf_query_results_to_string

def librdf_query_results_to_string2(*args):
  return _Redland.librdf_query_results_to_string2(*args)
librdf_query_results_to_string2 = _Redland.librdf_query_results_to_string2

def librdf_free_query_results(*args):
  return _Redland.librdf_free_query_results(*args)
librdf_free_query_results = _Redland.librdf_free_query_results

def librdf_query_results_is_bindings(*args):
  return _Redland.librdf_query_results_is_bindings(*args)
librdf_query_results_is_bindings = _Redland.librdf_query_results_is_bindings

def librdf_query_results_is_boolean(*args):
  return _Redland.librdf_query_results_is_boolean(*args)
librdf_query_results_is_boolean = _Redland.librdf_query_results_is_boolean

def librdf_query_results_is_graph(*args):
  return _Redland.librdf_query_results_is_graph(*args)
librdf_query_results_is_graph = _Redland.librdf_query_results_is_graph

def librdf_query_results_is_syntax(*args):
  return _Redland.librdf_query_results_is_syntax(*args)
librdf_query_results_is_syntax = _Redland.librdf_query_results_is_syntax

def librdf_query_results_get_boolean(*args):
  return _Redland.librdf_query_results_get_boolean(*args)
librdf_query_results_get_boolean = _Redland.librdf_query_results_get_boolean

def librdf_serializer_check_name(*args):
  return _Redland.librdf_serializer_check_name(*args)
librdf_serializer_check_name = _Redland.librdf_serializer_check_name

def librdf_new_serializer(*args):
  return _Redland.librdf_new_serializer(*args)
librdf_new_serializer = _Redland.librdf_new_serializer

def librdf_free_serializer(*args):
  return _Redland.librdf_free_serializer(*args)
librdf_free_serializer = _Redland.librdf_free_serializer

def librdf_serializer_serialize_stream_to_file(*args):
  return _Redland.librdf_serializer_serialize_stream_to_file(*args)
librdf_serializer_serialize_stream_to_file = _Redland.librdf_serializer_serialize_stream_to_file

def librdf_serializer_serialize_model_to_file(*args):
  return _Redland.librdf_serializer_serialize_model_to_file(*args)
librdf_serializer_serialize_model_to_file = _Redland.librdf_serializer_serialize_model_to_file

def librdf_serializer_serialize_stream_to_string(*args):
  return _Redland.librdf_serializer_serialize_stream_to_string(*args)
librdf_serializer_serialize_stream_to_string = _Redland.librdf_serializer_serialize_stream_to_string

def librdf_serializer_serialize_model_to_string(*args):
  return _Redland.librdf_serializer_serialize_model_to_string(*args)
librdf_serializer_serialize_model_to_string = _Redland.librdf_serializer_serialize_model_to_string

def librdf_serializer_get_feature(*args):
  return _Redland.librdf_serializer_get_feature(*args)
librdf_serializer_get_feature = _Redland.librdf_serializer_get_feature

def librdf_serializer_set_feature(*args):
  return _Redland.librdf_serializer_set_feature(*args)
librdf_serializer_set_feature = _Redland.librdf_serializer_set_feature

def librdf_serializer_set_namespace(*args):
  return _Redland.librdf_serializer_set_namespace(*args)
librdf_serializer_set_namespace = _Redland.librdf_serializer_set_namespace

def librdf_free_stream(*args):
  return _Redland.librdf_free_stream(*args)
librdf_free_stream = _Redland.librdf_free_stream

def librdf_stream_end(*args):
  return _Redland.librdf_stream_end(*args)
librdf_stream_end = _Redland.librdf_stream_end

def librdf_stream_next(*args):
  return _Redland.librdf_stream_next(*args)
librdf_stream_next = _Redland.librdf_stream_next

def librdf_stream_get_object(*args):
  return _Redland.librdf_stream_get_object(*args)
librdf_stream_get_object = _Redland.librdf_stream_get_object

def librdf_stream_get_context(*args):
  return _Redland.librdf_stream_get_context(*args)
librdf_stream_get_context = _Redland.librdf_stream_get_context

def librdf_log_message_code(*args):
  return _Redland.librdf_log_message_code(*args)
librdf_log_message_code = _Redland.librdf_log_message_code

def librdf_log_message_level(*args):
  return _Redland.librdf_log_message_level(*args)
librdf_log_message_level = _Redland.librdf_log_message_level

def librdf_log_message_facility(*args):
  return _Redland.librdf_log_message_facility(*args)
librdf_log_message_facility = _Redland.librdf_log_message_facility

def librdf_log_message_message(*args):
  return _Redland.librdf_log_message_message(*args)
librdf_log_message_message = _Redland.librdf_log_message_message

def librdf_log_message_locator(*args):
  return _Redland.librdf_log_message_locator(*args)
librdf_log_message_locator = _Redland.librdf_log_message_locator

def raptor_locator_line(*args):
  return _Redland.raptor_locator_line(*args)
raptor_locator_line = _Redland.raptor_locator_line

def raptor_locator_column(*args):
  return _Redland.raptor_locator_column(*args)
raptor_locator_column = _Redland.raptor_locator_column

def raptor_locator_byte(*args):
  return _Redland.raptor_locator_byte(*args)
raptor_locator_byte = _Redland.raptor_locator_byte

def raptor_locator_file(*args):
  return _Redland.raptor_locator_file(*args)
raptor_locator_file = _Redland.raptor_locator_file

def raptor_locator_uri(*args):
  return _Redland.raptor_locator_uri(*args)
raptor_locator_uri = _Redland.raptor_locator_uri

def librdf_internal_test_error(*args):
  return _Redland.librdf_internal_test_error(*args)
librdf_internal_test_error = _Redland.librdf_internal_test_error

def librdf_internal_test_warning(*args):
  return _Redland.librdf_internal_test_warning(*args)
librdf_internal_test_warning = _Redland.librdf_internal_test_warning

def librdf_python_world_init(*args):
  return _Redland.librdf_python_world_init(*args)
librdf_python_world_init = _Redland.librdf_python_world_init
# This file is compatible with both classic and new-style classes.

cvar = _Redland.cvar
librdf_short_copyright_string = cvar.librdf_short_copyright_string
librdf_copyright_string = cvar.librdf_copyright_string
librdf_version_string = cvar.librdf_version_string
librdf_version_major = cvar.librdf_version_major
librdf_version_minor = cvar.librdf_version_minor
librdf_version_release = cvar.librdf_version_release
librdf_version_decimal = cvar.librdf_version_decimal
raptor_version_string = cvar.raptor_version_string
raptor_version_major = cvar.raptor_version_major
raptor_version_minor = cvar.raptor_version_minor
raptor_version_release = cvar.raptor_version_release
raptor_version_decimal = cvar.raptor_version_decimal
rasqal_version_string = cvar.rasqal_version_string
rasqal_version_major = cvar.rasqal_version_major
rasqal_version_minor = cvar.rasqal_version_minor
rasqal_version_release = cvar.rasqal_version_release
rasqal_version_decimal = cvar.rasqal_version_decimal

